// Code generated by mockery v2.42.1. DO NOT EDIT.

package mocks

import (
	model "github.com/enbility/spine-go/model"
	mock "github.com/stretchr/testify/mock"
)

// ElectricalConnectionClientInterface is an autogenerated mock type for the ElectricalConnectionClientInterface type
type ElectricalConnectionClientInterface struct {
	mock.Mock
}

type ElectricalConnectionClientInterface_Expecter struct {
	mock *mock.Mock
}

func (_m *ElectricalConnectionClientInterface) EXPECT() *ElectricalConnectionClientInterface_Expecter {
	return &ElectricalConnectionClientInterface_Expecter{mock: &_m.Mock}
}

// RequestCharacteristics provides a mock function with given fields:
func (_m *ElectricalConnectionClientInterface) RequestCharacteristics() (*model.MsgCounterType, error) {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for RequestCharacteristics")
	}

	var r0 *model.MsgCounterType
	var r1 error
	if rf, ok := ret.Get(0).(func() (*model.MsgCounterType, error)); ok {
		return rf()
	}
	if rf, ok := ret.Get(0).(func() *model.MsgCounterType); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*model.MsgCounterType)
		}
	}

	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// ElectricalConnectionClientInterface_RequestCharacteristics_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'RequestCharacteristics'
type ElectricalConnectionClientInterface_RequestCharacteristics_Call struct {
	*mock.Call
}

// RequestCharacteristics is a helper method to define mock.On call
func (_e *ElectricalConnectionClientInterface_Expecter) RequestCharacteristics() *ElectricalConnectionClientInterface_RequestCharacteristics_Call {
	return &ElectricalConnectionClientInterface_RequestCharacteristics_Call{Call: _e.mock.On("RequestCharacteristics")}
}

func (_c *ElectricalConnectionClientInterface_RequestCharacteristics_Call) Run(run func()) *ElectricalConnectionClientInterface_RequestCharacteristics_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *ElectricalConnectionClientInterface_RequestCharacteristics_Call) Return(_a0 *model.MsgCounterType, _a1 error) *ElectricalConnectionClientInterface_RequestCharacteristics_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *ElectricalConnectionClientInterface_RequestCharacteristics_Call) RunAndReturn(run func() (*model.MsgCounterType, error)) *ElectricalConnectionClientInterface_RequestCharacteristics_Call {
	_c.Call.Return(run)
	return _c
}

// RequestDescriptions provides a mock function with given fields:
func (_m *ElectricalConnectionClientInterface) RequestDescriptions() (*model.MsgCounterType, error) {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for RequestDescriptions")
	}

	var r0 *model.MsgCounterType
	var r1 error
	if rf, ok := ret.Get(0).(func() (*model.MsgCounterType, error)); ok {
		return rf()
	}
	if rf, ok := ret.Get(0).(func() *model.MsgCounterType); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*model.MsgCounterType)
		}
	}

	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// ElectricalConnectionClientInterface_RequestDescriptions_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'RequestDescriptions'
type ElectricalConnectionClientInterface_RequestDescriptions_Call struct {
	*mock.Call
}

// RequestDescriptions is a helper method to define mock.On call
func (_e *ElectricalConnectionClientInterface_Expecter) RequestDescriptions() *ElectricalConnectionClientInterface_RequestDescriptions_Call {
	return &ElectricalConnectionClientInterface_RequestDescriptions_Call{Call: _e.mock.On("RequestDescriptions")}
}

func (_c *ElectricalConnectionClientInterface_RequestDescriptions_Call) Run(run func()) *ElectricalConnectionClientInterface_RequestDescriptions_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *ElectricalConnectionClientInterface_RequestDescriptions_Call) Return(_a0 *model.MsgCounterType, _a1 error) *ElectricalConnectionClientInterface_RequestDescriptions_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *ElectricalConnectionClientInterface_RequestDescriptions_Call) RunAndReturn(run func() (*model.MsgCounterType, error)) *ElectricalConnectionClientInterface_RequestDescriptions_Call {
	_c.Call.Return(run)
	return _c
}

// RequestParameterDescriptions provides a mock function with given fields:
func (_m *ElectricalConnectionClientInterface) RequestParameterDescriptions() (*model.MsgCounterType, error) {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for RequestParameterDescriptions")
	}

	var r0 *model.MsgCounterType
	var r1 error
	if rf, ok := ret.Get(0).(func() (*model.MsgCounterType, error)); ok {
		return rf()
	}
	if rf, ok := ret.Get(0).(func() *model.MsgCounterType); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*model.MsgCounterType)
		}
	}

	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// ElectricalConnectionClientInterface_RequestParameterDescriptions_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'RequestParameterDescriptions'
type ElectricalConnectionClientInterface_RequestParameterDescriptions_Call struct {
	*mock.Call
}

// RequestParameterDescriptions is a helper method to define mock.On call
func (_e *ElectricalConnectionClientInterface_Expecter) RequestParameterDescriptions() *ElectricalConnectionClientInterface_RequestParameterDescriptions_Call {
	return &ElectricalConnectionClientInterface_RequestParameterDescriptions_Call{Call: _e.mock.On("RequestParameterDescriptions")}
}

func (_c *ElectricalConnectionClientInterface_RequestParameterDescriptions_Call) Run(run func()) *ElectricalConnectionClientInterface_RequestParameterDescriptions_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *ElectricalConnectionClientInterface_RequestParameterDescriptions_Call) Return(_a0 *model.MsgCounterType, _a1 error) *ElectricalConnectionClientInterface_RequestParameterDescriptions_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *ElectricalConnectionClientInterface_RequestParameterDescriptions_Call) RunAndReturn(run func() (*model.MsgCounterType, error)) *ElectricalConnectionClientInterface_RequestParameterDescriptions_Call {
	_c.Call.Return(run)
	return _c
}

// RequestPermittedValueSets provides a mock function with given fields:
func (_m *ElectricalConnectionClientInterface) RequestPermittedValueSets() (*model.MsgCounterType, error) {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for RequestPermittedValueSets")
	}

	var r0 *model.MsgCounterType
	var r1 error
	if rf, ok := ret.Get(0).(func() (*model.MsgCounterType, error)); ok {
		return rf()
	}
	if rf, ok := ret.Get(0).(func() *model.MsgCounterType); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*model.MsgCounterType)
		}
	}

	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// ElectricalConnectionClientInterface_RequestPermittedValueSets_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'RequestPermittedValueSets'
type ElectricalConnectionClientInterface_RequestPermittedValueSets_Call struct {
	*mock.Call
}

// RequestPermittedValueSets is a helper method to define mock.On call
func (_e *ElectricalConnectionClientInterface_Expecter) RequestPermittedValueSets() *ElectricalConnectionClientInterface_RequestPermittedValueSets_Call {
	return &ElectricalConnectionClientInterface_RequestPermittedValueSets_Call{Call: _e.mock.On("RequestPermittedValueSets")}
}

func (_c *ElectricalConnectionClientInterface_RequestPermittedValueSets_Call) Run(run func()) *ElectricalConnectionClientInterface_RequestPermittedValueSets_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *ElectricalConnectionClientInterface_RequestPermittedValueSets_Call) Return(_a0 *model.MsgCounterType, _a1 error) *ElectricalConnectionClientInterface_RequestPermittedValueSets_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *ElectricalConnectionClientInterface_RequestPermittedValueSets_Call) RunAndReturn(run func() (*model.MsgCounterType, error)) *ElectricalConnectionClientInterface_RequestPermittedValueSets_Call {
	_c.Call.Return(run)
	return _c
}

// NewElectricalConnectionClientInterface creates a new instance of ElectricalConnectionClientInterface. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewElectricalConnectionClientInterface(t interface {
	mock.TestingT
	Cleanup(func())
}) *ElectricalConnectionClientInterface {
	mock := &ElectricalConnectionClientInterface{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
